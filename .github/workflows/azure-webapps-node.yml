on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # Remplacez par le nom de votre application Azure
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # Remplacez par le chemin vers votre projet Node.js si nécessaire
  NODE_VERSION: '20.x'                # Définissez la version de Node.js que vous souhaitez utiliser
  JASMINE_CONFIG_PATH: 'Spec/Support/jasmine.json'  # Spécifie le chemin du fichier de config Jasmine

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4    # Vérifie le code source

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Run Jasmine tests
      run: npm test # Assurez-vous que `npm test` exécute Jasmine (via un script dans package.json)

    - name: npm build
      run: npm run build --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
